HTML


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel ="stylesheet" href="users.css">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Scheherazade+New&display=swap" rel="stylesheet">
  
     
    <title>Users</title>
</head>
<body>
    <script src="users.js"></script>  
</body>
</html>
---------------------------------------------------------------
JS

document.body.innerHTML=`
<div class="user-form">

<input class="add-user-name" placeholder="enter your Name"/>
<input class="add-user-avatar" placeholder="Enter your pic url"/>
<button onclick="addUser()">ADD USER</button>
</div>
<section class="user-list">
</section>`;



async function getAllUsers(){
   const data= await fetch("https://616b1eb916e7120017fa1233.mockapi.io/users",
   {method:"GET"}
   );
   const users=await data.json();

   const userContainer=document.querySelector(".user-list");

   userContainer.innerHTML="";

   users.forEach((user)=>{

   userContainer.innerHTML += `
   <div class="user-container">
  <img class="user-avatar" src="${user.avatar}" alt=${user.name}/>
  <div>
   <p class ="user-name">${user.name}</p>
   <button onclick="toggleEdit(${user.id})">EDIT</button>
   <button onclick ="deleteUser(${user.id})">DELETE</button>
   <div class="edit-user-form edit-${user.id}">
   <input value="${user.name}" class="edit-${user.id}-user-name"  placeholder="Enter your name"/>
   <input value ="${user.avatar}" class="edit-${user.id}-user-avatar" placeholder="Enter your pic url"/>
   <button onclick="saveUser(${user.id})">Save</button> 
   </div>
   </div>
   </div>
   `;
   
   });
   console.log(users);
}
   getAllUsers();

  async function deleteUser(userId) {
   
   console.log("Deleting...",userId);
   const data=await fetch(
      "https://616b1eb916e7120017fa1233.mockapi.io/users/" + userId,
   { method: "DELETE" }
   );

getAllUsers();
   }


async function addUser(){
   console.log("Adding...");
   const name=document.querySelector(".add-user-name").value;
   const avatar=document.querySelector(".add-user-avatar").value;
   console.log(name,avatar);
  
   const data = await fetch(
      "https://616b1eb916e7120017fa1233.mockapi.io/users",
      {
         method:"POST",
      headers: { "Content-Type": "application/json"}, 
      body:JSON.stringify({name:name,avatar:avatar})
   }    
   );

getAllUsers();
}
function toggleEdit(userId){
   console.log("Editing....user");
   const editUserForm=document.querySelector(`.edit-${userId}`);
   console.log(editUserForm.style.display);
   editUserForm.style.display=editUserForm.style.display=="block" ? "none" :"block" ;
}

async function saveUser(userId) {
console.log("Saving...",userId);
const userName=document.querySelector(`.edit-${userId}-user-name`).value;
const userAvatar=document.querySelector(`.edit-${userId}-user-avatar`).value;
console.log(userName,userAvatar);
 const data = await fetch(
 "https://616b1eb916e7120017fa1233.mockapi.io/users/" +userId,
 {
    method:"PUT",
    headers: { "Content-Type": "application/json"}, 
       body:JSON.stringify({name: userName, avatar: userAvatar}),
 }

 );
getAllUsers();
}
------------------------------------------------------------
CSS

body{
    background-color: beige;
    background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);
    min-height: 100vh;
    
}

.user-container{
    background-color: white;
   margin-left:4rem;
   margin-right:4rem;
   margin-up:1rem;
   margin-bottom:1rem;
    padding: 1rem;
    border-radius: 1rem;
    display: flex;
    gap:1rem;
    transition:all 0.5s;
}
.user-avatar{
border-radius: 50%;
height: 8rem;
width:8rem;
object-fit: cover;
}
.user-name{
font-size:1.4rem;
font-family: 'Scheherazade New', serif;
}
.user-container:hover{
    transform:scale(1.1);
}
.user-container:hover .user-name{
    color:crimson;
}
.user-form{
margin: 1rem;
padding:1rem;
}
.edit-user-form{
    display: none;
}













